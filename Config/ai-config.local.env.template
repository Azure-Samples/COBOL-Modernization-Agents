# =============================================================================
# LOCAL Azure OpenAI Configuration (YOUR PERSONAL CREDENTIALS)
# =============================================================================
# Copy this file to ai-config.local.env and update with your actual values.
# Never commit ai-config.local.env to git - it contains your secrets!
# =============================================================================

# Azure OpenAI Service Configuration
# Get these from Azure Portal → Your OpenAI Resource → "Keys and Endpoint"
AZURE_OPENAI_ENDPOINT="https://YOUR-RESOURCE-NAME.openai.azure.com/"
AZURE_OPENAI_API_KEY="your-32-character-api-key-here"

# Model Deployment Configuration  
# Get deployment name from Azure AI Studio → Deployments
AZURE_OPENAI_DEPLOYMENT_NAME="gpt-4.1"
AZURE_OPENAI_MODEL_ID="gpt-4.1"

# Specialized Model IDs (can be different models for different tasks)
AZURE_OPENAI_COBOL_ANALYZER_MODEL="gpt-4.1"
AZURE_OPENAI_JAVA_CONVERTER_MODEL="gpt-4.1" 
AZURE_OPENAI_DEPENDENCY_MAPPER_MODEL="gpt-4.1"
AZURE_OPENAI_UNIT_TEST_MODEL="gpt-4.1"

# Service Configuration
AZURE_OPENAI_SERVICE_TYPE="AzureOpenAI"
AZURE_OPENAI_MAX_TOKENS="4000"
AZURE_OPENAI_TEMPERATURE="0.1"

# Application Settings
COBOL_SOURCE_FOLDER="cobol-source"
JAVA_OUTPUT_FOLDER="java-output"
TEST_OUTPUT_FOLDER="TestOutput"

# Logging Configuration
LOG_LEVEL="Information"
ENABLE_CHAT_LOGGING="true"
ENABLE_API_CALL_LOGGING="true"

# =============================================================================
# Instructions:
# 1. Replace "YOUR-RESOURCE-NAME" with your actual Azure OpenAI resource name
# 2. Replace "your-32-character-api-key-here" with your actual API key
# 3. Update deployment and model names to match your Azure OpenAI setup (gpt-4.1)
# 4. Save this file and run ./doctor.sh test to verify configuration
# =============================================================================
